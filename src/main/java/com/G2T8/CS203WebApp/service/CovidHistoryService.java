package com.G2T8.CS203WebApp.service;

import com.G2T8.CS203WebApp.repository.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.G2T8.CS203WebApp.model.*;
import java.util.*;

import javax.mail.MessagingException;

import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;

@Service
public class CovidHistoryService {

    @Autowired
    private EmailService emailService;

    @Autowired
    private CovidHistoryRepository covidHistoryRepository;

    public List<CovidHistory> getAllCovidHistories() {
        return covidHistoryRepository.findAll();
    }

    // returns list because one person can contract covid several times
    public List<CovidHistory> getAllCovidHistoryFromOneUser(Long ID) {

        // getting the covid history of each user by custom query findByUserId in CovidHistoryRepo
        // do not use findById bc that uses CovidHistoryId which does dont point to
        // which user it is referring to

        List<CovidHistory> origList = covidHistoryRepository.findByUserID(ID);
        return origList; 

    }

    // returns a particular covidHistory record of one user
    public CovidHistory getOneCovidHistoryFromOneUser(Long ID, LocalDateTime contracteddate){
        List<CovidHistory> answer = covidHistoryRepository.findByUserID(ID);
        LocalDate contractdatewithoutime = contracteddate.toLocalDate(); 
        for(int i = 0 ; i<= answer.size()-1 ; i++){
            if(answer.get(i).getContractedDate().toLocalDate().equals(contractdatewithoutime)){
                return answer.get(i);
            }
        }

        return null; 

    }


    // recovery date is can be null , so can add in covidhistory with just userid, 
    //covidHistoryID (autogenerated), contracted_date 
    @Transactional(rollbackFor = { MessagingException.class, IOException.class })
    public CovidHistory addCovidHistory(CovidHistory covidHistory) throws MessagingException, IOException {
        if (covidHistory == null || covidHistory.getUser() == null || covidHistory.getContractedDate() == null) {

            return null;
        }
        User user = covidHistory.getUser();
        Map<String, Object> templateModel = new HashMap<>();
        templateModel.put("recipientName", user.getName());
        emailService.sendEmailWithTemplate(user.getEmail(),
                "[XXX Employee Management System] Instructions To Covid Employee!", "covid-notification.html",
                templateModel);

        
        return covidHistoryRepository.save(covidHistory);
    }

    // after recovery date is known , can use this method to add in recoverDate
    public CovidHistory addRecoveryDate(Long ID, LocalDateTime contracteddate){
        List<CovidHistory> answer = covidHistoryRepository.findByUserID(ID);
        LocalDate contractdatewithoutime = contracteddate.toLocalDate();
        for (int i = 0; i <= answer.size() - 1; i++) {
            if (answer.get(i).getContractedDate().toLocalDate().equals(contractdatewithoutime)) {
                return answer.get(i);
            }
        }
        return null;

    
    }
    
}
